CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
PROJECT(LJRat C)

SET(RELEASE_BUILD OFF CACHE BOOL "Check build type")


if (MSVC)
    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif ()

add_library(LJRat_DLL SHARED
    src/LJRat.c
    src/message.c
    src/session.c
    src/list.c
    src/worker.c
    src/loader.c
    src/commands/load.c
    src/commands/get.c
    src/commands/put.c
    src/commands/execute.c
    src/commands/dir.c
    src/commands/disconnect.c
)

target_include_directories(LJRat_DLL PUBLIC include/)
target_compile_definitions(LJRat_DLL PUBLIC -DBUILD_DLL)
target_link_libraries(LJRat_DLL ws2_32)

add_executable(LJRat_EXE 
    src/LJRat.c
    src/message.c
    src/session.c
    src/list.c
    src/loader.c
    src/worker.c
    src/commands/load.c
    src/commands/get.c
    src/commands/put.c
    src/commands/execute.c
    src/commands/dir.c
    src/commands/disconnect.c
)


target_include_directories(LJRat_EXE PUBLIC include/)
target_link_libraries(LJRat_EXE ws2_32)




add_subdirectory(src/modules)

if(RELEASE_BUILD)
    add_custom_command(
            TARGET LJRat_EXE POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_SOURCE_DIR}/build/LJRat_Release
            COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_SOURCE_DIR}/build/LJRat_Release/bin
            COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/lp ${PROJECT_SOURCE_DIR}/build/LJRat_Release
            COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:LJRat_EXE> ${PROJECT_SOURCE_DIR}/build/LJRat_Release
            COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:LJRat_DLL> ${PROJECT_SOURCE_DIR}/build/LJRat_Release
            )
endif()
